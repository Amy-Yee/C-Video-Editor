Script started on Fri 08 Dec 2017 05:54:42 PM PST
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ make
gcc -Wall -ansi -std=c99 -g -c -g   -c -o MovieLab.o MovieLab.c
gcc -Wall -ansi -std=c99 -g -c -g FileIO.c -o FileIO.o
gcc -Wall -ansi -std=c99 -g -c -g DIPs.c -o DIPs.o
DIPs.c: In function â€˜Spotlightâ€™:
DIPs.c:194: warning: control reaches end of non-void function
gcc -Wall -ansi -std=c99 -g -c -g Image.c -o Image.o
gcc -Wall -ansi -std=c99 -g -c -g ImageList.c -o ImageList.o
gcc -Wall -ansi -std=c99 -g -c -g Movie.c -o Movie.o
gcc  MovieLab.o FileIO.o DIPs.o Image.o ImageList.o Movie.o -o MovieLab
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ Move[KieLab-[K -h
MovieLab: Command not found.
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ M[K./MovieLb[Kab =-[K[K-h

Usage: MovieLab -i <file> -o <file> -f <framenum> -s <WIDTHxHEIGHT> [options]
Options:
-aging                Activate the aging filter on every movie frame
-hflip                Activate horizontal flip on every movie frame
-edge                 Activate the edge filter on every movie frame
-crop <start-end>     Crop the movie frames from <start> to <end>
-fast <factor>        Fast forward the movie by <factor>
-reverse              Reverse the frame order of the input movie
-watermark <file>     Add a watermark from <file> to every movie frame
-spotlight            Spotlight the fade in and fade out
-zoom                 Zoom in and out the input movie
-h                    Display this usage information
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ ./MovieLab -h[Ki mouse.yuv -o out.yuv -f 50[K[Kast 50[K[K[K[K[K 50 -s 480x270 -ag ing -f[Khflip
Movie is successfully loaded! 
50 frames from the movie out.yuv were written successfully! 
Aging operation is done!
HFlip completed!
50 frames from the movie out.yuv were written successfully! 
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 480x270 -ag ing -hflip[K[K[K[K[K[K[K[K[K[A[80G[K[Ked ge
Movie is successfully loaded! 
50 frames from the movie out.yuv were written successfully! 
Edge completed!
50 frames from the movie out.yuv were written successfully! 
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 480x270 -ed ge[K[K[A[80G[K[K[K-cr o[K[A[80G[K[Kfa st 3 crop[K[K[K[K-crop 10-40
Movie is successfully loaded! 
50 frames from the movie out.yuv were written successfully! 
Crop complete! Number of new frames is 31. 
Operation Fast is done! New number of frames is 11
11 frames from the movie out.yuv were written successfully! 
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 480x270 -fa st 3 -crop 10-40[K[K[K[K[K[K[K[K[K[K[K[K[K[A[80G[K[Kre ves[Krse
Movie is successfully loaded! 
50 frames from the movie out.yuv were written successfully! 
50 frames from the movie out.yuv were written successfully! 
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 480x270 -re verse[K[K[K[K[K[A[80G[K[Kwa termark watermark.ppm[K[K[K[K
Movie is successfully loaded! 
50 frames from the movie out.yuv were written successfully! 
50 frames from the movie out.yuv were written successfully! 
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 480x270 -wa termark watermark[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[80G[K[Ksp otlight
Movie is successfully loaded! 
50 frames from the movie out.yuv were written successfully! 
50 frames from the movie out.yuv were written successfully! 
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 480x270 -sp otlight[A[80G[80G[26G[1@v[80Gso[1@p[A[27G[80G[27G[1@a[80G-p[1@s[A[28G[1@l[80G[K s[1@-[A[29G[1@g[80G0-[1@ [A[30G[80G[30G[1@r[80G7 [1@0[A[31G[80G[31G[1@i[80G20[1@7[A[32G[80G[32G[1@n[80Gx7[1@2[A[33G[80G[33G[1@d[80G02[1@x[A[34G[80G[34G[1@ [80G8x[1@0[A[35G[80G80
==11216== Memcheck, a memory error detector
==11216== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==11216== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==11216== Command: ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 480x270 -spotlight
==11216== 
Movie is successfully loaded! 
50 frames from the movie out.yuv were written successfully! 
50 frames from the movie out.yuv were written successfully! 
==11216== 
==11216== HEAP SUMMARY:
==11216==     in use at exit: 19,443,632 bytes in 252 blocks
==11216==   total heap usage: 306 allocs, 54 frees, 19,473,186 bytes allocated
==11216== 
==11216== LEAK SUMMARY:
==11216==    definitely lost: 8 bytes in 1 blocks
==11216==    indirectly lost: 19,314,024 bytes in 250 blocks
==11216==      possibly lost: 129,600 bytes in 1 blocks
==11216==    still reachable: 0 bytes in 0 blocks
==11216==         suppressed: 0 bytes in 0 blocks
==11216== Rerun with --leak-check=full to see details of leaked memory
==11216== 
==11216== For counts of detected and suppressed errors, rerun with: -v
==11216== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ valgrind ./MovieLab -i mouse.yuv -o out.yuv -f 50 -s 48 0x270 -spotlight[A[26G[K[80G 0[K[A[26Gmake clean
rm -f *.o MovieLab `find . -name '*.ppm'! -name 'watermark_template.ppm'`
]0;ayee5@crystalcove:hw5[ayee5@crystalcove hw5]$ exit
exit

Script done on Fri 08 Dec 2017 05:57:50 PM PST
